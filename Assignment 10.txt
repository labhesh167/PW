1) How to Create an Object in Java?
-->To create an object, use the new keyword followed by the class name and parentheses (if no arguments are needed for the constructor). You can also call a specific constructor if it has arguments. Here's how you can create an object of the Class name.

public class Main {
    public static void main(String[] args) {
        // Creating an object of MyClass using the default constructor
        MyClass myObject1 = new MyClass();

        // Creating an object of MyClass using the parameterized constructor
        MyClass myObject2 = new MyClass(42, "Hello, Java!");

        // Calling a method on the objects
        myObject1.printDetails();
        myObject2.printDetails();
    }
}

2)What is the use of a new keyword in java?
-->The Java new keyword is used to create an instance of the class. In other words, it instantiates a class by allocating memory for a new object and returning a reference to that memory. We can also use the new keyword to create the array object.

3)What are the different types of variables in java?
-->here are three different types of variables a class can have in Java are local variables, instance variables, and class/static variable.

4)What is difference between instance variable and local variable?
-->An instance variable is a variable that is declared in a class but outside a method while the local variable is a variable declared within a method or a constructor. Thus, this is the main difference between instance variable and local variable.

5)In which area memory is allocated for instance variable and local variable?
-->Stack is a memory place where the methods and the local variables are stored. (variable references either primitive or object references are also stored in the stack). Heap is a memory place where the objects and its instance variable are stored.

6)What is method overloading?
-->Method Overloading allows different methods to have the same name, but different signatures where the signature can differ by the number of input parameters or type of input parameters, or a mixture of both. Method overloading is also known as Compile-time Polymorphism, Static Polymorphism, or Early binding in Java.