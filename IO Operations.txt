1. What is Input and Output Stream in Java?
--> A stream can be defined as a sequence of data. The InputStream is used to read data from a source and
	the OutputStream is used for writing data to a destination.
	
2.What are the methods of OutputStream?
-->i)   write() - writes the specified byte to the output stream.
   ii)  write(byte[] array) - writes the bytes from the specified array to the output stream.
   iii) flush() - forces to write all data present in the output stream to the destination..
   iv)  close() - closes the output stream.
 
3.What is serialization in Java?
-->Serialization is the process od converting an object into a stream of bytes to transfer it over a network or to store it in a file or database. In Java, serialization is done by implementing the serialization interface.

4.What is the Serialization interface in java?
-->The Serializable interface in Java is a marker interface that has no methods. It is used to mark classes that
	can be serialized, meaning their object instances can be converted into a stream of bytes.

5.What is desentralization interface in Java?
-->Deserialization is the process of converting a stream of bytes back into an object instance. This is done
	after an object has been serialized.

6.How is serialization achieved in Java?
-->Serialization is achieved in Java by implementing the Serializable interface. When an object is serialized, its
	state is converted into a stream of bytes, which can then be transferred over a network or stored in a file or
	database.

7.How is deserialization achieved in Java?
-->Deserialization is achieved in Java by reading a stream of bytes and using them to recreate the original
	object instance. This is done by calling the readObject() method of an ObjectInputStream instance.

8.How can you avoid certain member variable of class from getting Serialized?
-->Mark member variables as static or transient, and those member variables will no more be a part of
	Serialization.

9.What classes are available in the Java IO File Classes API?
-->The following classes are available in th eJava IO API and are important to work with files in Java.
	i)File
	ii)RandomAccessFile
	iii)FileInputStream
	iv)FileReader
	v)FileOutputStream
	vi)FileWriter